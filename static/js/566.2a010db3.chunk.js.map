{"version":3,"file":"static/js/566.2a010db3.chunk.js","mappings":"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","sources":["api/api.js","components/Loader/Loader.js","pages/MovieDetails.styled.js","pages/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = 'b13a09f684c7fe23fb2f1a323ef19ea8';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getMoviesByName = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const getMoviesById = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeDots\n      height=\"120\"\n      width=\"120\"\n      radius=\"9\"\n      color=\"green\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{ justifyContent: 'center' }}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n","import styled from 'styled-components';\nimport { Link as StyledLink } from 'react-router-dom';\n\nexport const Section = styled.div`\n  display: flex;\n  justify-content: center;\n\n  margin: 40px;\n`;\n\nexport const Image = styled.img`\n  margin-right: 40px;\n  width: 300px;\n  height: auto;\n`;\n\nexport const LinkButton = styled(StyledLink)`\n  button {\n    cursor: pointer;\n    margin: 20px;\n    padding: 8px 8px;\n    border: none;\n    border-radius: 16px;\n    color: white;\n    font-size: inherit;\n    background-color: green;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    margin-left: 40px;\n    width: 100px;\n    :hover {\n      background: #239b56;\n    }\n  }\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  justify-content: center;\n  margin: 0px;\n  & h3 {\n    display: flex;\n    align-items: center;\n  }\n`;\n","import { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport { getMoviesById } from 'api/api';\nimport { Section, Image, LinkButton, List } from './MovieDetails.styled';\nimport { useRef } from 'react';\nimport { Suspense } from 'react';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [movieInfo, setMovieInfo] = useState([]);\n  const [isLoader, setIsLoader] = useState(false);\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    setIsLoader(true);\n    const fetchTrendingMovies = async movieId => {\n      try {\n        const results = await getMoviesById(movieId);\n        setMovieInfo(results);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoader(false);\n      }\n    };\n    fetchTrendingMovies(movieId);\n  }, [movieId]);\n\n  const { poster_path, original_title, vote_average, overview, genres } =\n    movieInfo;\n\n  const movieImg = poster_path\n    ? `https://image.tmdb.org/t/p/w400/${poster_path}`\n    : 'https://via.placeholder.com/400x600.png?text=Poster+Not+Available';\n\n  const userScore = vote_average\n    ? `${(vote_average * 10).toFixed(0)}%`\n    : 'This movie has not been rated yet.';\n\n  return (\n    <>\n      <LinkButton to={backLinkHref.current}>\n        <button type=\"button\">Go Back</button>\n      </LinkButton>\n      <Section>\n        {isLoader && <Loader />}\n        <Image src={movieImg} alt={original_title} />\n        <div>\n          <h2>{original_title}</h2>\n          <p>User Score:{userScore}</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>\n            {genres &&\n              genres.length > 0 &&\n              genres.map(genre => genre.name).join(', ')}\n          </p>\n        </div>\n      </Section>\n      <List>\n        <h3>Additional information</h3>\n        <li>\n          <LinkButton to=\"cast\">\n            <button type=\"button\">Cast</button>\n          </LinkButton>\n        </li>\n        <li>\n          <LinkButton to=\"reviews\">\n            <button type=\"button\">Reviews</button>\n          </LinkButton>\n        </li>\n      </List>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","API_KEY","getTrendingMovies","axios","data","getMoviesByName","query","getMoviesById","movieId","getMovieCast","getMovieReviews","Loader","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","wrapperClassName","visible","Section","styled","Image","LinkButton","StyledLink","List","useParams","location","useLocation","useState","movieInfo","setMovieInfo","isLoader","setIsLoader","backLinkHref","useRef","state","from","useEffect","fetchTrendingMovies","results","console","log","message","poster_path","original_title","vote_average","overview","genres","movieImg","userScore","toFixed","to","current","type","src","alt","length","map","genre","name","join","Suspense"],"sourceRoot":""}