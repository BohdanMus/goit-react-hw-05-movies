{"version":3,"file":"static/js/688.a314e67b.chunk.js","mappings":"+SAEMA,EAAW,6BACXC,EAAU,mCAEHC,EAAiB,mCAAG,sGACRC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,yCACuBC,IAFf,uBACvBG,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qDAOjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,mCACiBC,EADjB,iCACiDK,EADjD,gCADM,uBACrBF,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfG,EAAa,mCAAG,WAAMC,GAAN,yFACJL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACEQ,EADF,oBACqBP,EADrB,oBADI,uBACnBG,EADmB,EACnBA,KADmB,kBAIpBA,GAJoB,2CAAH,sDAObK,EAAY,mCAAG,WAAMD,GAAN,yFACHL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACEQ,EADF,4BAC6BP,EAD7B,oBADG,uBAClBG,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZM,EAAe,mCAAG,WAAMF,GAAN,yFACNL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACEQ,EADF,6BAC8BP,EAD9B,2BADM,uBACrBG,EADqB,EACrBA,KADqB,kBAKtBA,GALsB,2CAAH,qD,4EChCfO,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,OAAO,MACPC,MAAM,MACNC,OAAO,IACPC,MAAM,QACNC,UAAU,qBACVC,aAAc,CAAEC,eAAgB,UAChCC,iBAAiB,GACjBC,SAAS,GAGd,C,gGCdYC,EAAMC,EAAAA,GAAAA,IAAH,0DAKHC,EAAOD,EAAAA,GAAAA,GAAH,8X,SCHJE,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACJ,EAAD,UACGE,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,UACGG,EAAMK,eACL,SAACb,EAAD,CACEc,IAAG,0CAAqCN,EAAMO,aAC9CC,IAAKR,EAAMS,kBAGb,SAACjB,EAAD,CACEc,IACE,oEAEFE,IAAKR,EAAMS,kBAGf,wBAAKT,EAAMU,YAfNV,EAAME,GADA,KAsBtB,C,yJC5BYS,E,OAAQlB,GAAAA,GAAH,6F,SCiClB,EA7Ba,WACX,OAA4CmB,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACRD,GAAY,GACZ,IAAME,EAAmB,mCAAG,gHAEE7C,EAAAA,EAAAA,MAFF,gBAEhB8C,EAFgB,EAEhBA,QACRL,EAAkBK,GAHM,gDAKxBC,QAAQC,IAAI,KAAMC,SALM,yBAOxBN,GAAY,GAPY,4EAAH,qDAWzBE,GACD,GAAE,KAGD,gCACE,SAACP,EAAD,6BACCI,IAAY,SAACjC,EAAA,EAAD,KACb,SAACa,EAAA,EAAD,CAAWC,OAAQiB,MAGxB,C","sources":["api/api.js","components/Loader/Loader.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","pages/Home.styled.js","pages/Home.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = 'b13a09f684c7fe23fb2f1a323ef19ea8';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getMoviesByName = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const getMoviesById = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeDots\n      height=\"120\"\n      width=\"120\"\n      radius=\"9\"\n      color=\"green\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{ justifyContent: 'center' }}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n","import styled from 'styled-components';\nexport const Img = styled.img`\n  width: 200px;\n  height: auto;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 30px;\n  list-style: none;\n\n  li {\n    width: 200px;\n\n    object-fit: cover;\n    border-radius: 2%;\n    transition: transform 250ms;\n    &:hover,\n    &:focus {\n      transform: scale(1.05);\n    }\n  }\n  h3 {\n    color: black;\n  }\n  a {\n    text-decoration: none;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { Img, List } from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.backdrop_path ? (\n              <Img\n                src={`https://image.tmdb.org/t/p/w400/${movie.poster_path}`}\n                alt={movie.original_title}\n              />\n            ) : (\n              <Img\n                src={\n                  'https://via.placeholder.com/400x600.png?text=Poster+Not+Available'\n                }\n                alt={movie.original_title}\n              />\n            )}\n            <h3>{movie.title}</h3>\n          </Link>\n        </li>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  display: flex;\n  justify-content: center;\n  margin-top: -20 px;\n`;\n","import { Loader } from 'components/Loader/Loader';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'api/api';\nimport { Title } from './Home.styled';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoader, setIsLoader] = useState(false);\n\n  useEffect(() => {\n    setIsLoader(true);\n    const fetchTrendingMovies = async () => {\n      try {\n        const { results } = await getTrendingMovies();\n        setTrendingMovies(results);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoader(false);\n      }\n    };\n\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <section>\n      <Title>Trending today</Title>\n      {isLoader && <Loader />}\n      <MovieList movies={trendingMovies} />\n    </section>\n  );\n};\n\nexport default Home;\n"],"names":["BASE_URL","API_KEY","getTrendingMovies","axios","data","getMoviesByName","query","getMoviesById","movieId","getMovieCast","getMovieReviews","Loader","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","wrapperClassName","visible","Img","styled","List","MovieList","movies","location","useLocation","map","movie","to","id","state","from","backdrop_path","src","poster_path","alt","original_title","title","Title","useState","trendingMovies","setTrendingMovies","isLoader","setIsLoader","useEffect","fetchTrendingMovies","results","console","log","message"],"sourceRoot":""}