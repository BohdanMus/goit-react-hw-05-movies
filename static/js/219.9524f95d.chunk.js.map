{"version":3,"file":"static/js/219.9524f95d.chunk.js","mappings":"+SAEMA,EAAW,6BACXC,EAAU,mCAEHC,EAAiB,mCAAG,sGACRC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,yCACuBC,IAFf,uBACvBG,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qDAOjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,mCACiBC,EADjB,iCACiDK,EADjD,gCADM,uBACrBF,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfG,EAAa,mCAAG,WAAMC,GAAN,yFACJL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACEQ,EADF,oBACqBP,EADrB,oBADI,uBACnBG,EADmB,EACnBA,KADmB,kBAIpBA,GAJoB,2CAAH,sDAObK,EAAY,mCAAG,WAAMD,GAAN,yFACHL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACEQ,EADF,4BAC6BP,EAD7B,oBADG,uBAClBG,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZM,EAAe,mCAAG,WAAMF,GAAN,yFACNL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACEQ,EADF,6BAC8BP,EAD9B,2BADM,uBACrBG,EADqB,EACrBA,KADqB,kBAKtBA,GALsB,2CAAH,qD,yKChCfO,EAAMC,EAAAA,GAAAA,IAAH,0DAIHC,EAAOD,EAAAA,GAAAA,GAAH,6MAcJE,EAAWF,EAAAA,GAAAA,GAAH,yCAIRG,EAASH,EAAAA,GAAAA,EAAH,8C,SCoCnB,EAtDa,WACX,OAAwBI,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQV,GAAYW,EAAAA,EAAAA,MAAZX,QACR,GAAgCQ,EAAAA,EAAAA,WAAS,GAAzC,eAAOI,EAAP,KAAiBC,EAAjB,KACA,GAA8CL,EAAAA,EAAAA,WAAS,GAAvD,eAAOM,EAAP,KAAwBC,EAAxB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACRH,GAAY,GACZ,IAAMI,EAAc,mCAAG,WAAMjB,GAAN,mGAEIC,EAAAA,EAAAA,IAAaD,GAFjB,gBAEXS,EAFW,EAEXA,KACRC,EAAQD,GAHW,gDAKnBS,QAAQC,IAAI,KAAMC,SALC,yBAOnBP,GAAY,GACZE,GAAmB,GARA,4EAAH,sDAWpBE,EAAejB,EAChB,GAAE,CAACA,KAGF,gCACGY,IAAY,SAACS,EAAA,EAAD,IACZP,GAAmC,IAAhBL,EAAKa,QACvB,SAACf,EAAD,2DAEA,SAACF,EAAD,UACGI,EAAKc,KAAI,SAAAC,GAAK,OACb,UAAClB,EAAD,WACGkB,EAAMC,cACL,SAACtB,EAAD,CACEuB,IAAG,0CAAqCF,EAAMC,cAC9CE,IAAKH,EAAMI,QAGb,SAACzB,EAAD,CACEuB,IACE,oEAEFC,IAAKH,EAAMI,QAGf,wBAAKJ,EAAMI,QACX,uCAAeJ,EAAMK,eAfRL,EAAMM,QADR,QAuBxB,C,4ECxDYT,EAAS,WACpB,OACE,SAAC,KAAD,CACEU,OAAO,MACPC,MAAM,MACNC,OAAO,IACPC,MAAM,QACNC,UAAU,qBACVC,aAAc,CAAEC,eAAgB,UAChCC,iBAAiB,GACjBC,SAAS,GAGd,C","sources":["api/api.js","components/Cast/Cast.styled.js","components/Cast/Cast.js","components/Loader/Loader.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = 'b13a09f684c7fe23fb2f1a323ef19ea8';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getMoviesByName = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const getMoviesById = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};\n","import styled from 'styled-components';\n\nexport const Img = styled.img`\n  width: 150px;\n  height: auto;\n`;\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  justify-content: center;\n  column-gap: 16px;\n  & h3 {\n    font-size: 16px;\n  }\n  & p {\n    font-size: 12px;\n  }\n`;\n\nexport const ListItem = styled.li`\n  width: 150px;\n`;\n\nexport const NoCast = styled.p`\n  margin-left: 40px;\n`;\n","import { getMovieCast } from 'api/api';\nimport { Loader } from 'components/Loader/Loader';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Img, List, ListItem, NoCast } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n  const [isLoader, setIsLoader] = useState(false);\n  const [isContentLoaded, setIsContentLoaded] = useState(false);\n\n  useEffect(() => {\n    setIsLoader(true);\n    const fetchMovieCast = async movieId => {\n      try {\n        const { cast } = await getMovieCast(movieId);\n        setCast(cast);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoader(false);\n        setIsContentLoaded(true);\n      }\n    };\n    fetchMovieCast(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoader && <Loader />}\n      {isContentLoaded && cast.length === 0 ? (\n        <NoCast>Sorry, Cast is not available for this movie</NoCast>\n      ) : (\n        <List>\n          {cast.map(actor => (\n            <ListItem key={actor.cast_id}>\n              {actor.profile_path ? (\n                <Img\n                  src={`https://image.tmdb.org/t/p/w400/${actor.profile_path}`}\n                  alt={actor.name}\n                />\n              ) : (\n                <Img\n                  src={\n                    'https://via.placeholder.com/400x600.png?text=Poster+Not+Available'\n                  }\n                  alt={actor.name}\n                />\n              )}\n              <h3>{actor.name}</h3>\n              <p>Character: {actor.character}</p>\n            </ListItem>\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeDots\n      height=\"120\"\n      width=\"120\"\n      radius=\"9\"\n      color=\"green\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{ justifyContent: 'center' }}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n"],"names":["BASE_URL","API_KEY","getTrendingMovies","axios","data","getMoviesByName","query","getMoviesById","movieId","getMovieCast","getMovieReviews","Img","styled","List","ListItem","NoCast","useState","cast","setCast","useParams","isLoader","setIsLoader","isContentLoaded","setIsContentLoaded","useEffect","fetchMovieCast","console","log","message","Loader","length","map","actor","profile_path","src","alt","name","character","cast_id","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","wrapperClassName","visible"],"sourceRoot":""}