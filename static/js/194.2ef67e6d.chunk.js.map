{"version":3,"file":"static/js/194.2ef67e6d.chunk.js","mappings":"+SAEMA,EAAW,6BACXC,EAAU,mCAEHC,EAAiB,mCAAG,sGACRC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,yCACuBC,IAFf,uBACvBG,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qDAOjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,mCACiBC,EADjB,iCACiDK,EADjD,gCADM,uBACrBF,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfG,EAAa,mCAAG,WAAMC,GAAN,yFACJL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACEQ,EADF,oBACqBP,EADrB,oBADI,uBACnBG,EADmB,EACnBA,KADmB,kBAIpBA,GAJoB,2CAAH,sDAObK,EAAY,mCAAG,WAAMD,GAAN,yFACHL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACEQ,EADF,4BAC6BP,EAD7B,oBADG,uBAClBG,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZM,EAAe,mCAAG,WAAMF,GAAN,yFACNL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACEQ,EADF,6BAC8BP,EAD9B,2BADM,uBACrBG,EADqB,EACrBA,KADqB,kBAKtBA,GALsB,2CAAH,qD,4EChCfO,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,OAAO,MACPC,MAAM,MACNC,OAAO,IACPC,MAAM,QACNC,UAAU,qBACVC,aAAc,CAAEC,eAAgB,UAChCC,iBAAiB,GACjBC,SAAS,GAGd,C,gGCdYC,EAAMC,EAAAA,GAAAA,IAAH,0DAKHC,EAAOD,EAAAA,GAAAA,GAAH,8X,SCHJE,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACJ,EAAD,UACGE,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,UACGG,EAAMK,eACL,SAACb,EAAD,CACEc,IAAG,0CAAqCN,EAAMO,aAC9CC,IAAKR,EAAMS,kBAGb,SAACjB,EAAD,CACEc,IACE,oEAEFE,IAAKR,EAAMS,kBAGf,wBAAKT,EAAMU,YAfNV,EAAME,GADA,KAsBtB,C,8KC5BYS,EAAOlB,EAAAA,GAAAA,KAAH,8FAMJmB,EAAQnB,EAAAA,GAAAA,MAAH,mJASLoB,EAASpB,EAAAA,GAAAA,OAAH,qV,SCqDnB,EA/De,WACb,OAA4BqB,EAAAA,EAAAA,UAAS,IAArC,eAAOlB,EAAP,KAAemB,EAAf,KACA,GAAgCD,EAAAA,EAAAA,WAAS,GAAzC,eAAOE,EAAP,KAAiBC,EAAjB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA8BN,EAAAA,EAAAA,WAAS,GAAvC,eAAOO,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACR9C,EAAK,UAAG0C,EAAaK,IAAI,gBAApB,QAAgC,GAC3C,GAAK/C,EAAL,CAEA,IAAMgD,EAAQ,mCAAG,6FACfR,GAAY,GADG,mBAGazC,EAAAA,EAAAA,IAAgBC,GAH7B,gBAIU,KADfiD,EAHK,EAGLA,SACIC,QACVL,GAAW,GACXP,EAAU,MAEVO,GAAW,GACXP,EAAUW,IATC,gDAYbE,QAAQC,IAAI,KAAMC,SAZL,yBAcbb,GAAY,GAdC,4EAAH,qDAiBdQ,GAnBkB,CAoBnB,GAAE,CAACN,IAcJ,OACE,gCACE,UAACR,EAAD,YACE,SAACC,EAAD,CACEmB,KAAK,OACLC,KAAK,QACLC,YAAY,gBACZC,SAfkB,SAAAC,GACxB,IAAMC,EAAaD,EAAEE,OAAOC,MAC5B,GAAmB,KAAfF,EACF,OAAOhB,EAAgB,CAAC,GAE1BA,EAAgB,CAAEW,KAAMK,GACzB,KAWK,SAACvB,EAAD,CAAQkB,KAAK,SAAb,uBAEDf,IAAY,SAAClC,EAAA,EAAD,IACZuC,GACC,SAAC1B,EAAA,EAAD,CAAWC,OAAQA,KAEnB,4EAIP,C","sources":["api/api.js","components/Loader/Loader.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","pages/Movies.styled.js","pages/Movies.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = 'b13a09f684c7fe23fb2f1a323ef19ea8';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getMoviesByName = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const getMoviesById = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeDots\n      height=\"120\"\n      width=\"120\"\n      radius=\"9\"\n      color=\"green\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{ justifyContent: 'center' }}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n","import styled from 'styled-components';\nexport const Img = styled.img`\n  width: 200px;\n  height: auto;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 30px;\n  list-style: none;\n\n  li {\n    width: 200px;\n\n    object-fit: cover;\n    border-radius: 2%;\n    transition: transform 250ms;\n    &:hover,\n    &:focus {\n      transform: scale(1.05);\n    }\n  }\n  h3 {\n    color: black;\n  }\n  a {\n    text-decoration: none;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { Img, List } from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.backdrop_path ? (\n              <Img\n                src={`https://image.tmdb.org/t/p/w400/${movie.poster_path}`}\n                alt={movie.original_title}\n              />\n            ) : (\n              <Img\n                src={\n                  'https://via.placeholder.com/400x600.png?text=Poster+Not+Available'\n                }\n                alt={movie.original_title}\n              />\n            )}\n            <h3>{movie.title}</h3>\n          </Link>\n        </li>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Input = styled.input`\n  border: 2px solid #239b56;\n  border-radius: 16px;\n  padding: 8px;\n  font-size: 16px;\n  width: 300px;\n  outline: 0;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  margin: 20px;\n  padding: 8px 8px;\n  border: none;\n  border-radius: 16px;\n  color: white;\n  font-size: inherit;\n  background-color: #239b56;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: 100px;\n  &:hover,\n  &:focus {\n    background: green;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { getMoviesByName } from 'api/api';\nimport { useSearchParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Button, Form, Input } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoader, setIsLoader] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isFound, setIsFound] = useState(true);\n\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n    if (!query) return;\n\n    const getMovie = async () => {\n      setIsLoader(true);\n      try {\n        const { results } = await getMoviesByName(query);\n        if (results.length === 0) {\n          setIsFound(false);\n          setMovies([]);\n        } else {\n          setIsFound(true);\n          setMovies(results);\n        }\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoader(false);\n      }\n    };\n    getMovie();\n  }, [searchParams]);\n\n  // const handleSubmit = query => {\n  //   setSearchParams({ query });\n  // };\n\n  const updateQueryString = e => {\n    const queryValue = e.target.value;\n    if (queryValue === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ type: queryValue });\n  };\n\n  return (\n    <section>\n      <Form>\n        <Input\n          type=\"text\"\n          name=\"query\"\n          placeholder=\"Search movies\"\n          onChange={updateQueryString}\n        />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n      {isLoader && <Loader />}\n      {isFound ? (\n        <MovieList movies={movies} />\n      ) : (\n        <p>Sorry, we can't find any movie with that title</p>\n      )}\n    </section>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","getTrendingMovies","axios","data","getMoviesByName","query","getMoviesById","movieId","getMovieCast","getMovieReviews","Loader","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","wrapperClassName","visible","Img","styled","List","MovieList","movies","location","useLocation","map","movie","to","id","state","from","backdrop_path","src","poster_path","alt","original_title","title","Form","Input","Button","useState","setMovies","isLoader","setIsLoader","useSearchParams","searchParams","setSearchParams","isFound","setIsFound","useEffect","get","getMovie","results","length","console","log","message","type","name","placeholder","onChange","e","queryValue","target","value"],"sourceRoot":""}